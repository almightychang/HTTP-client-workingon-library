ARM GAS  /tmp/ccSA6cEA.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB169:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c **** ******************************************************************************
   4:Core/Src/main.c **** * @file           : main.c
   5:Core/Src/main.c **** * @brief          : Main program body
   6:Core/Src/main.c **** ******************************************************************************
   7:Core/Src/main.c **** * @attention
   8:Core/Src/main.c **** *
   9:Core/Src/main.c **** * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c **** * All rights reserved.</center></h2>
  11:Core/Src/main.c **** *
  12:Core/Src/main.c **** * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c **** * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c **** * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c **** *                             www.st.com/SLA0044
  16:Core/Src/main.c **** *
  17:Core/Src/main.c **** ******************************************************************************
  18:Core/Src/main.c **** */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "lwip.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "usb_otg.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include <stdbool.h>
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccSA6cEA.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c **** * @brief  The application entry point.
  63:Core/Src/main.c **** * @retval int
  64:Core/Src/main.c **** */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****     /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****     HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****     /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****     /* Configure the system clock */
  81:Core/Src/main.c ****     SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****     /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****     /* Initialize all configured peripherals */
ARM GAS  /tmp/ccSA6cEA.s 			page 3


  88:Core/Src/main.c ****     MX_GPIO_Init();
  89:Core/Src/main.c ****     MX_USART3_UART_Init();
  90:Core/Src/main.c ****     MX_USB_OTG_FS_PCD_Init();
  91:Core/Src/main.c ****     MX_LWIP_Init();
  92:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
  93:Core/Src/main.c ****     //ethernetif_notify_conn_changed(&gnetif);
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****     /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****     /* Infinite loop */
  98:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****     while (1)
 100:Core/Src/main.c ****     {
 101:Core/Src/main.c ****         /* USER CODE END WHILE */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 104:Core/Src/main.c ****     }
 105:Core/Src/main.c ****     /* USER CODE END 3 */
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c **** * @brief System Clock Configuration
 110:Core/Src/main.c **** * @retval None
 111:Core/Src/main.c **** */
 112:Core/Src/main.c **** void SystemClock_Config(void)
 113:Core/Src/main.c **** {
 114:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 115:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 116:Core/Src/main.c ****     RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     /** Configure LSE Drive Capability
 119:Core/Src/main.c **** */
 120:Core/Src/main.c ****     HAL_PWR_EnableBkUpAccess();
 121:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 122:Core/Src/main.c **** */
 123:Core/Src/main.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 124:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 125:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 126:Core/Src/main.c **** * in the RCC_OscInitTypeDef structure.
 127:Core/Src/main.c **** */
 128:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 129:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 130:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 131:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 132:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 133:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 72;
 134:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 135:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 3;
 136:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 137:Core/Src/main.c ****     {
 138:Core/Src/main.c ****         Error_Handler();
 139:Core/Src/main.c ****     }
 140:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 141:Core/Src/main.c **** */
 142:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 143:Core/Src/main.c ****     |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  /tmp/ccSA6cEA.s 			page 4


 145:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 146:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 147:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 150:Core/Src/main.c ****     {
 151:Core/Src/main.c ****         Error_Handler();
 152:Core/Src/main.c ****     }
 153:Core/Src/main.c ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_CLK48;
 154:Core/Src/main.c ****     PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 155:Core/Src/main.c ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 156:Core/Src/main.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 157:Core/Src/main.c ****     {
 158:Core/Src/main.c ****         Error_Handler();
 159:Core/Src/main.c ****     }
 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE END 4 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c **** * @brief  This function is executed in case of error occurrence.
 168:Core/Src/main.c **** * @retval None
 169:Core/Src/main.c **** */
 170:Core/Src/main.c **** void Error_Handler(void)
 171:Core/Src/main.c **** {
  29              		.loc 1 171 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 172:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 173:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 174:Core/Src/main.c ****     __disable_irq();
  35              		.loc 1 174 5 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccSA6cEA.s 			page 5


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  /tmp/ccSA6cEA.s 			page 6


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  /tmp/ccSA6cEA.s 			page 7


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 175:Core/Src/main.c ****     while (1)
  51              		.loc 1 175 5 discriminator 1 view .LVU4
 176:Core/Src/main.c ****     {
 177:Core/Src/main.c ****     }
  52              		.loc 1 177 5 discriminator 1 view .LVU5
 175:Core/Src/main.c ****     while (1)
  53              		.loc 1 175 11 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE169:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB168:
 113:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 113 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 208
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 B5B0     		sub	sp, sp, #212
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 216
 114:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 114 5 view .LVU8
 114:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 114 24 is_stmt 0 view .LVU9
ARM GAS  /tmp/ccSA6cEA.s 			page 8


  80 0004 3022     		movs	r2, #48
  81 0006 0021     		movs	r1, #0
  82 0008 28A8     		add	r0, sp, #160
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 115:Core/Src/main.c ****     RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  85              		.loc 1 115 5 is_stmt 1 view .LVU10
 115:Core/Src/main.c ****     RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  86              		.loc 1 115 24 is_stmt 0 view .LVU11
  87 000e 0021     		movs	r1, #0
  88 0010 2391     		str	r1, [sp, #140]
  89 0012 2491     		str	r1, [sp, #144]
  90 0014 2591     		str	r1, [sp, #148]
  91 0016 2691     		str	r1, [sp, #152]
  92 0018 2791     		str	r1, [sp, #156]
 116:Core/Src/main.c **** 
  93              		.loc 1 116 5 is_stmt 1 view .LVU12
 116:Core/Src/main.c **** 
  94              		.loc 1 116 30 is_stmt 0 view .LVU13
  95 001a 8422     		movs	r2, #132
  96 001c 02A8     		add	r0, sp, #8
  97 001e FFF7FEFF 		bl	memset
  98              	.LVL1:
 120:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
  99              		.loc 1 120 5 is_stmt 1 view .LVU14
 100 0022 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 101              	.LVL2:
 123:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 102              		.loc 1 123 5 view .LVU15
 103              	.LBB6:
 123:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 104              		.loc 1 123 5 view .LVU16
 123:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 105              		.loc 1 123 5 view .LVU17
 106 0026 254B     		ldr	r3, .L11
 107 0028 1A6C     		ldr	r2, [r3, #64]
 108 002a 42F08052 		orr	r2, r2, #268435456
 109 002e 1A64     		str	r2, [r3, #64]
 123:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 110              		.loc 1 123 5 view .LVU18
 111 0030 1B6C     		ldr	r3, [r3, #64]
 112 0032 03F08053 		and	r3, r3, #268435456
 113 0036 0093     		str	r3, [sp]
 123:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 114              		.loc 1 123 5 view .LVU19
 115 0038 009B     		ldr	r3, [sp]
 116              	.LBE6:
 123:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 117              		.loc 1 123 5 view .LVU20
 124:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 118              		.loc 1 124 5 view .LVU21
 119              	.LBB7:
 124:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 120              		.loc 1 124 5 view .LVU22
 124:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 121              		.loc 1 124 5 view .LVU23
 122 003a 214A     		ldr	r2, .L11+4
ARM GAS  /tmp/ccSA6cEA.s 			page 9


 123 003c 1368     		ldr	r3, [r2]
 124 003e 23F44043 		bic	r3, r3, #49152
 125 0042 43F48043 		orr	r3, r3, #16384
 126 0046 1360     		str	r3, [r2]
 124:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 127              		.loc 1 124 5 view .LVU24
 128 0048 1368     		ldr	r3, [r2]
 129 004a 03F44043 		and	r3, r3, #49152
 130 004e 0193     		str	r3, [sp, #4]
 124:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 131              		.loc 1 124 5 view .LVU25
 132 0050 019B     		ldr	r3, [sp, #4]
 133              	.LBE7:
 124:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 134              		.loc 1 124 5 view .LVU26
 128:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 135              		.loc 1 128 5 view .LVU27
 128:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 136              		.loc 1 128 38 is_stmt 0 view .LVU28
 137 0052 0123     		movs	r3, #1
 138 0054 2893     		str	r3, [sp, #160]
 129:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 139              		.loc 1 129 5 is_stmt 1 view .LVU29
 129:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 140              		.loc 1 129 32 is_stmt 0 view .LVU30
 141 0056 4FF4A023 		mov	r3, #327680
 142 005a 2993     		str	r3, [sp, #164]
 130:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 143              		.loc 1 130 5 is_stmt 1 view .LVU31
 130:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 144              		.loc 1 130 36 is_stmt 0 view .LVU32
 145 005c 0223     		movs	r3, #2
 146 005e 2E93     		str	r3, [sp, #184]
 131:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 147              		.loc 1 131 5 is_stmt 1 view .LVU33
 131:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 148              		.loc 1 131 37 is_stmt 0 view .LVU34
 149 0060 4FF48002 		mov	r2, #4194304
 150 0064 2F92     		str	r2, [sp, #188]
 132:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 72;
 151              		.loc 1 132 5 is_stmt 1 view .LVU35
 132:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 72;
 152              		.loc 1 132 32 is_stmt 0 view .LVU36
 153 0066 0422     		movs	r2, #4
 154 0068 3092     		str	r2, [sp, #192]
 133:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 155              		.loc 1 133 5 is_stmt 1 view .LVU37
 133:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 156              		.loc 1 133 32 is_stmt 0 view .LVU38
 157 006a 4822     		movs	r2, #72
 158 006c 3192     		str	r2, [sp, #196]
 134:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 3;
 159              		.loc 1 134 5 is_stmt 1 view .LVU39
 134:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 3;
 160              		.loc 1 134 32 is_stmt 0 view .LVU40
 161 006e 3293     		str	r3, [sp, #200]
 135:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccSA6cEA.s 			page 10


 162              		.loc 1 135 5 is_stmt 1 view .LVU41
 135:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 163              		.loc 1 135 32 is_stmt 0 view .LVU42
 164 0070 0323     		movs	r3, #3
 165 0072 3393     		str	r3, [sp, #204]
 136:Core/Src/main.c ****     {
 166              		.loc 1 136 5 is_stmt 1 view .LVU43
 136:Core/Src/main.c ****     {
 167              		.loc 1 136 9 is_stmt 0 view .LVU44
 168 0074 28A8     		add	r0, sp, #160
 169 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 170              	.LVL3:
 136:Core/Src/main.c ****     {
 171              		.loc 1 136 8 view .LVU45
 172 007a C8B9     		cbnz	r0, .L8
 142:Core/Src/main.c ****     |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173              		.loc 1 142 5 is_stmt 1 view .LVU46
 142:Core/Src/main.c ****     |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174              		.loc 1 142 33 is_stmt 0 view .LVU47
 175 007c 0F23     		movs	r3, #15
 176 007e 2393     		str	r3, [sp, #140]
 144:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177              		.loc 1 144 5 is_stmt 1 view .LVU48
 144:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 178              		.loc 1 144 36 is_stmt 0 view .LVU49
 179 0080 0221     		movs	r1, #2
 180 0082 2491     		str	r1, [sp, #144]
 145:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 181              		.loc 1 145 5 is_stmt 1 view .LVU50
 145:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 182              		.loc 1 145 37 is_stmt 0 view .LVU51
 183 0084 0023     		movs	r3, #0
 184 0086 2593     		str	r3, [sp, #148]
 146:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 185              		.loc 1 146 5 is_stmt 1 view .LVU52
 146:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 186              		.loc 1 146 38 is_stmt 0 view .LVU53
 187 0088 4FF48052 		mov	r2, #4096
 188 008c 2692     		str	r2, [sp, #152]
 147:Core/Src/main.c **** 
 189              		.loc 1 147 5 is_stmt 1 view .LVU54
 147:Core/Src/main.c **** 
 190              		.loc 1 147 38 is_stmt 0 view .LVU55
 191 008e 2793     		str	r3, [sp, #156]
 149:Core/Src/main.c ****     {
 192              		.loc 1 149 5 is_stmt 1 view .LVU56
 149:Core/Src/main.c ****     {
 193              		.loc 1 149 9 is_stmt 0 view .LVU57
 194 0090 23A8     		add	r0, sp, #140
 195 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 196              	.LVL4:
 149:Core/Src/main.c ****     {
 197              		.loc 1 149 8 view .LVU58
 198 0096 68B9     		cbnz	r0, .L9
 153:Core/Src/main.c ****     PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 199              		.loc 1 153 5 is_stmt 1 view .LVU59
 153:Core/Src/main.c ****     PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
ARM GAS  /tmp/ccSA6cEA.s 			page 11


 200              		.loc 1 153 46 is_stmt 0 view .LVU60
 201 0098 0A4B     		ldr	r3, .L11+8
 202 009a 0293     		str	r3, [sp, #8]
 154:Core/Src/main.c ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 203              		.loc 1 154 5 is_stmt 1 view .LVU61
 154:Core/Src/main.c ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 204              		.loc 1 154 46 is_stmt 0 view .LVU62
 205 009c 0023     		movs	r3, #0
 206 009e 1593     		str	r3, [sp, #84]
 155:Core/Src/main.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 207              		.loc 1 155 5 is_stmt 1 view .LVU63
 155:Core/Src/main.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 208              		.loc 1 155 45 is_stmt 0 view .LVU64
 209 00a0 2193     		str	r3, [sp, #132]
 156:Core/Src/main.c ****     {
 210              		.loc 1 156 5 is_stmt 1 view .LVU65
 156:Core/Src/main.c ****     {
 211              		.loc 1 156 9 is_stmt 0 view .LVU66
 212 00a2 02A8     		add	r0, sp, #8
 213 00a4 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 214              	.LVL5:
 156:Core/Src/main.c ****     {
 215              		.loc 1 156 8 view .LVU67
 216 00a8 30B9     		cbnz	r0, .L10
 160:Core/Src/main.c **** 
 217              		.loc 1 160 1 view .LVU68
 218 00aa 35B0     		add	sp, sp, #212
 219              	.LCFI2:
 220              		.cfi_remember_state
 221              		.cfi_def_cfa_offset 4
 222              		@ sp needed
 223 00ac 5DF804FB 		ldr	pc, [sp], #4
 224              	.L8:
 225              	.LCFI3:
 226              		.cfi_restore_state
 138:Core/Src/main.c ****     }
 227              		.loc 1 138 9 is_stmt 1 view .LVU69
 228 00b0 FFF7FEFF 		bl	Error_Handler
 229              	.LVL6:
 230              	.L9:
 151:Core/Src/main.c ****     }
 231              		.loc 1 151 9 view .LVU70
 232 00b4 FFF7FEFF 		bl	Error_Handler
 233              	.LVL7:
 234              	.L10:
 158:Core/Src/main.c ****     }
 235              		.loc 1 158 9 view .LVU71
 236 00b8 FFF7FEFF 		bl	Error_Handler
 237              	.LVL8:
 238              	.L12:
 239              		.align	2
 240              	.L11:
 241 00bc 00380240 		.word	1073887232
 242 00c0 00700040 		.word	1073770496
 243 00c4 00012000 		.word	2097408
 244              		.cfi_endproc
 245              	.LFE168:
ARM GAS  /tmp/ccSA6cEA.s 			page 12


 247              		.section	.text.main,"ax",%progbits
 248              		.align	1
 249              		.global	main
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	main:
 255              	.LFB167:
  66:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 256              		.loc 1 66 1 view -0
 257              		.cfi_startproc
 258              		@ Volatile: function does not return.
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 266              		.loc 1 74 5 view .LVU73
 267 0002 FFF7FEFF 		bl	HAL_Init
 268              	.LVL9:
  81:Core/Src/main.c **** 
 269              		.loc 1 81 5 view .LVU74
 270 0006 FFF7FEFF 		bl	SystemClock_Config
 271              	.LVL10:
  88:Core/Src/main.c ****     MX_USART3_UART_Init();
 272              		.loc 1 88 5 view .LVU75
 273 000a FFF7FEFF 		bl	MX_GPIO_Init
 274              	.LVL11:
  89:Core/Src/main.c ****     MX_USB_OTG_FS_PCD_Init();
 275              		.loc 1 89 5 view .LVU76
 276 000e FFF7FEFF 		bl	MX_USART3_UART_Init
 277              	.LVL12:
  90:Core/Src/main.c ****     MX_LWIP_Init();
 278              		.loc 1 90 5 view .LVU77
 279 0012 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 280              	.LVL13:
  91:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 281              		.loc 1 91 5 view .LVU78
 282 0016 FFF7FEFF 		bl	MX_LWIP_Init
 283              	.LVL14:
 284              	.L14:
  99:Core/Src/main.c ****     {
 285              		.loc 1 99 5 discriminator 1 view .LVU79
 104:Core/Src/main.c ****     /* USER CODE END 3 */
 286              		.loc 1 104 5 discriminator 1 view .LVU80
  99:Core/Src/main.c ****     {
 287              		.loc 1 99 11 discriminator 1 view .LVU81
 288 001a FEE7     		b	.L14
 289              		.cfi_endproc
 290              	.LFE167:
 292              		.text
 293              	.Letext0:
 294              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 295              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccSA6cEA.s 			page 13


 296              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 297              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 298              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 299              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr.h"
 300              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 301              		.file 10 "Core/Inc/gpio.h"
 302              		.file 11 "Core/Inc/usart.h"
 303              		.file 12 "Core/Inc/usb_otg.h"
 304              		.file 13 "LWIP/App/lwip.h"
 305              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 306              		.file 15 "<built-in>"
ARM GAS  /tmp/ccSA6cEA.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccSA6cEA.s:20     .text.Error_Handler:0000000000000000 $t
     /tmp/ccSA6cEA.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccSA6cEA.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccSA6cEA.s:65     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccSA6cEA.s:241    .text.SystemClock_Config:00000000000000bc $d
     /tmp/ccSA6cEA.s:248    .text.main:0000000000000000 $t
     /tmp/ccSA6cEA.s:254    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_USART3_UART_Init
MX_USB_OTG_FS_PCD_Init
MX_LWIP_Init
